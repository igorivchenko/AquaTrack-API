{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "AquaTracker app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of aquatracker app"
  },
  "servers": [
    {
      "url": "https://aquatrack-backend-1b8z.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Water",
      "description": "Operations about users."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "paths": {
    "/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "operationId": "loginUser",
        "description": "Authenticates a user using email and password.",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "P@ssw0rd!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in an user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "JWT access token",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User register",
        "operationId": "registerUser",
        "description": "Authorization a user using email and password.",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "P@ssw0rd!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully registered a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered the user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "id",
                        "email",
                        "accessToken"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The unique identifier of the user",
                          "example": "67d18eeec877ea14ac3492c0"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "description": "The user's email address",
                          "example": "user@example.com"
                        },
                        "accessToken": {
                          "type": "string",
                          "description": "access token used for authentication",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User logout",
        "operationId": "logoutUser",
        "description": "Logs out the authenticated user by invalidating their session or token.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged out the user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged out."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/totalUsers": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Retrieve total number of registered users",
        "operationId": "totalUser",
        "description": "Returns the total count of users registered in the application.",
        "security": [],
        "responses": {
          "200": {
            "description": "Successful response with the total user count.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Total number of registered users retrieved successfully!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "totalUsers": {
                          "type": "integer",
                          "example": 152
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User token refresh",
        "operationId": "refreshUsersSession",
        "description": "Refresh user session token.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "sessionId",
                  "refreshToken"
                ],
                "properties": {
                  "sessionId": {
                    "type": "string",
                    "format": "id",
                    "example": "67b0f823c9218c15b8e3701b"
                  },
                  "refreshToken": {
                    "type": "string",
                    "format": "token",
                    "example": "kV6GUh3zOMc+b9tIsOamv5NuZt9ABqxOroJ+/QSL"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully refreshed a session!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "JWT access token",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/reset-pwd": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset password",
        "operationId": "resetPassword",
        "description": "Updates the user’s password using a reset token.",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "token",
                  "password"
                ],
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "JWT Token from email",
                    "example": "1234567890abcdef"
                  },
                  "password": {
                    "type": "string",
                    "description": "New password",
                    "example": "NewSecurePassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset password email was successfully sent!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password was successfully reset!"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "UnauthorizedError"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Token is expired or invalid."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/auth/send-reset-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Send reset password email",
        "operationId": "sendResetEmail",
        "description": "Sends a password reset link to the provided email address.",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "format": "email",
                    "description": "User Email",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset password email was successfully sent!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email was successfully sent!"
                    },
                    "data": {
                      "type": "object",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user",
        "operationId": "currentUserInfo",
        "description": "Get current user info",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current user with id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 67b91abbb180078c4327247d!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/users": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update current user",
        "operationId": "updateUserInfo",
        "description": "Update current user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Joker"
                  },
                  "email": {
                    "type": "string",
                    "example": "cetetak579@kurbieh.com"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "female",
                      "male"
                    ],
                    "example": "female"
                  },
                  "weight": {
                    "type": "number",
                    "example": 75
                  },
                  "dailySportTime": {
                    "type": "number",
                    "example": 3
                  },
                  "dailyNorm": {
                    "type": "number",
                    "example": 1500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully patched a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/users/avatar": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update current user avatar",
        "operationId": "updateUserAvatar",
        "description": "Update current user avatar.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data:": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "67b0fb1c07658221fbada021"
                  },
                  "avatarUrl": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully patched a user!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Add  water portion",
        "operationId": "addWater",
        "description": "Create data of water portion with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "date"
                ],
                "properties": {
                  "amount": {
                    "description": "\"Time to drinking water portion\"",
                    "type": "number",
                    "example": 100
                  },
                  "date": {
                    "description": "Time of drinking a portion of water",
                    "type": "string",
                    "example": "2024-03-01T10:00:00.000Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create water portion",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created water portion!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water/{id}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Update water portion",
        "operationId": "updateWater",
        "description": "Update the portion of water by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "description": "The amount of water drunk, ml",
                    "type": "number",
                    "example": 100
                  },
                  "date": {
                    "description": "Time of drinking a portion of water",
                    "type": "string",
                    "example": "2024-03-01T10:00:00.000Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Patch data of water portion",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched the data of water portion!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/water"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete water portion",
        "operationId": "deleteWater",
        "description": "Delete the portion of water",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully the portion of water deleted!"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/water/day": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Day cards",
        "operationId": "dayCard",
        "description": "Retrieve the total water cards for the day. User must provide a valid access token in the `Authorization` header and a date in the query parameters to specify the day.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-01-12T00:00:00Z"
            },
            "description": "The date to specify the day for which the water cards are being retrieved. Must be in ISO 8601 format."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the total water cards for the day.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Total day water cards"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "date",
                        "totalDayWater",
                        "consumedWaterData",
                        "owner"
                      ],
                      "properties": {
                        "date": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-01-12T00:00:00Z"
                        },
                        "totalDayWater": {
                          "description": "The total amount of water consumed per day, in milliliters.",
                          "type": "number",
                          "example": 5000
                        },
                        "consumedWaterData": {
                          "description": "The list of water cards for the day.",
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/water"
                          }
                        },
                        "owner": {
                          "description": "The unique identifier of the user who owns the water cards.",
                          "type": "string",
                          "example": "60d21b4667d0d8992e610c85"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/month": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Month cards",
        "operationId": "monthCard",
        "description": "Retrieve the total water cards for the month. This endpoint allows the authenticated user to get a summary of their water intake for a specific month. The user must provide a valid access token in the `Authorization` header and a date in the query parameters to specify the month.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2025-01-01T00:00:00Z"
            },
            "description": "The date to specify the month for which the water cards are being retrieved. Must be in ISO 8601 format."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the total water cards for the month.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Total month water cards"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "date",
                          "totalDayWater"
                        ],
                        "properties": {
                          "date": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-01-01T00:00:00Z"
                          },
                          "totalDayWater": {
                            "description": "The total amount of water consumed per day, in milliliters.",
                            "type": "number",
                            "example": 5000
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "400": {
        "description": "Bad request. Invalid input data.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "data": {
                  "type": "string",
                  "example": "Bad Request"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized. User must be authenticated.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "string",
                  "example": "Session not found"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "The requested resource was not found.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "string",
                  "example": "Resource not found"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong. Please try again later."
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "description": "User's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "John Doe",
            "default": "",
            "minimum": 3,
            "maximum": 20
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "varvara@gmail.com"
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "example": "$2b$10$EixZaYVK1fsbw1ZfbX3OXeP"
          },
          "gender": {
            "description": "User's gender",
            "type": "string",
            "enum": [
              "female",
              "male"
            ],
            "default": "female"
          },
          "weight": {
            "description": "User's weight",
            "type": "number",
            "example": 55,
            "default": 0
          },
          "dailySportTime": {
            "description": "User's dailySportTime",
            "type": "number",
            "example": 5,
            "default": 0
          },
          "dailyNorm": {
            "description": "User's dailyNorm",
            "type": "integer",
            "example": 1500,
            "default": 1500,
            "minimum": 500,
            "maximum": 5000
          },
          "avatarUrl": {
            "description": "Link to user's photo",
            "type": "string",
            "example": "https://res.cloudinary.com/uqwgdu/image/upload/image.png",
            "default": null
          }
        }
      },
      "water": {
        "type": "object",
        "required": [
          "_id",
          "amount",
          "date",
          "owner"
        ],
        "properties": {
          "_id": {
            "description": "Unique identifier",
            "type": "string",
            "example": "65ca67e7ae7f10c88b598384"
          },
          "amount": {
            "description": "The water's volume (in ml)",
            "type": "number",
            "minimum": 0,
            "maximum": 5000,
            "example": 50
          },
          "date": {
            "description": "Time to drinking water's portion",
            "type": "string",
            "format": "date-time",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}Z$",
            "example": "2024-03-01T10:00:00.000Z"
          },
          "owner": {
            "description": "The unique identifier of the user who owns this water card.",
            "type": "string",
            "example": "65ca67e7ae7f10c88b598384"
          }
        }
      }
    }
  }
}